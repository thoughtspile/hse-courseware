const request = require('request');

// Прямоугольник, в котором ищем: south, west, north, east
const bbox = '54.195989325475125,37.53650665283203,54.2702365778787,37.71709442138672';
// Кроме подстановок, строка в `` может занимать несколько строк.
// Комментарии внутри строки только потому что Overpass QL позволяет это.
const query = `
  // Вывести результат в формате JSON
  [out:json];
  // Объединить результаты запросов внутри скобок
  (
    relation[route=subway](${bbox}); // Ветки метро в bbox
    relation[route=bus](${bbox}); // Автобусные маршруты в bbox
  );
  // Поскольку relation сами по себе не содержат точек с координатами,
  // нужно достать их отдельно через рекурсию вниз (сами relation тоже оставить)
  (
    ._; // '._' -- ссылка на текущее множество объектов (сейчас это несколько relation)
    >; // Оператор рекурсии вниз, достает из relation все way и node
  );
  // Обратите внимание, что эти скобки -- тоже объединение

  // Вывести результат
  out;
`;

// Делаем POST-запрос к одному из зеркал OSM
request({
  method: 'POST',
  uri: 'http://api.openstreetmap.fr/oapi/interpreter/',
  // В теле запроса передаем нашу overpass-программу
  body: query
}, (err ,res, body) => {
  // Аккуратно, body -- строка с JSON, а не объект. Можно парсить, можно писать в файл.
  // Но я выведу в консоль.
  console.log(body);
})
